<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title></title>
    <description>Website of Buck Shlegeris.
</description>
    <link>http://bshlgrs.github.io</link>
    <atom:link href="http://bshlgrs.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Terse notes on graph algorithms</title>
        
        
          <description>&lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js&quot; integrity=&quot;sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;

</description>
        
        <pubDate>Sat, 02 Jul 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/07/02/graph.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/07/02/graph.html</guid>
      </item>
    
      <item>
        <title>SMS vs email responsiveness</title>
        
        
          <description>&lt;p&gt;Here’s something I’ve learned recently: People are waaaaay more responsive to SMS than email. If you need to get a quick short response from someone, you should definitely text them.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 02 Jul 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/07/02/sms.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/07/02/sms.html</guid>
      </item>
    
      <item>
        <title>Testing whether two integers are different</title>
        
        
          <description>&lt;p&gt;Here is a super simple statistics question whose answer I didn’t know until just now: How do you test whether one integer is different from another?&lt;/p&gt;

</description>
        
        <pubDate>Sat, 02 Jul 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/07/02/poisson.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/07/02/poisson.html</guid>
      </item>
    
      <item>
        <title>Hash-ordered treaps</title>
        
        
          <description>&lt;p&gt;Hash-ordered treaps are a cool kind of binary search tree. They have the neat property that the mapping from ordered sets to hash-ordered treaps is one-to-one and onto. That is, for every ordered set, there’s exactly one valid hash-ordered treap which represents it.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 02 Jul 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/07/02/hash-ordered-treaps.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/07/02/hash-ordered-treaps.html</guid>
      </item>
    
      <item>
        <title>You should work at Triplebyte</title>
        
        
          <description>&lt;p&gt;Triplebyte, the startup where I work, is hiring. We’re looking for engineers, a writer, a UX designer, and some generalist roles.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 30 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/06/30/triplebyte.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/06/30/triplebyte.html</guid>
      </item>
    
      <item>
        <title>Studying for startup interviews with &#39;Cracking the Coding Interview&#39;</title>
        
        
          <description>&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/098478280X&quot;&gt;Cracking the Coding Interview&lt;/a&gt; is by far the most popular interview prep book for software engineers. It’s a great book. But it was written for a few years ago, and software engineering interviews seem to have changed in the meantime, at least in the Silicon Valley engineering culture which I’m most involved in.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 22 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/06/22/ctci.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/06/22/ctci.html</guid>
      </item>
    
      <item>
        <title>A data structure for range kth-smallest queries</title>
        
        
          <description>&lt;p&gt;Suppose I want to maintain a set of people where each has an age and a wealth. I want to be able to quickly insert people, delete people, and answer queries of the form “find the $l k$th richest person whose age is between $l x$ and $l y$”.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 16 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/06/16/kth-richest.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/06/16/kth-richest.html</guid>
      </item>
    
      <item>
        <title>Generalized multi-quickselect</title>
        
        
          <description>&lt;p&gt;I’ve been thinking a lot recently about how you find the $l k$th smallest element in the disjoint union of several data structures.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 16 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/06/16/generalized-multi-quickselect.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/06/16/generalized-multi-quickselect.html</guid>
      </item>
    
      <item>
        <title>Quickselect on multiple sorted arrays</title>
        
        
          <description>&lt;p&gt;&lt;strong&gt;Edit: Thanks heaps to &lt;a href=&quot;http://stackoverflow.com/users/1009831/evgeny-kluev&quot;&gt;Evgeny Kluev&lt;/a&gt;, the author of that original StackOverflow answer, for noticing that I’d made a mistake in the total time complexity calculation.&lt;/strong&gt;&lt;/p&gt;

</description>
        
        <pubDate>Wed, 15 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/06/15/multi-sorted-array-quickselect.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/06/15/multi-sorted-array-quickselect.html</guid>
      </item>
    
      <item>
        <title>Quickselect on an unordered array and an order statistic tree</title>
        
        
          <description>&lt;p&gt;&lt;strong&gt;I did this work myself, so there are probably mistakes. I think the conclusion is right though.&lt;/strong&gt;&lt;/p&gt;

</description>
        
        <pubDate>Sun, 12 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://bshlgrs.github.io/2016/06/12/quickselect-lemma.html</link>
        <guid isPermaLink="true">http://bshlgrs.github.io/2016/06/12/quickselect-lemma.html</guid>
      </item>
    
  </channel>
</rss>

